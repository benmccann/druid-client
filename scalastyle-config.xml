<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2016 mbr targeting GmbH
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->
<!--

If you wish to turn off checking for a section of code, you can put a comment in the source
before and after the section, with the following syntax:

  // scalastyle:off
  ...  // stuff that breaks the styles
  // scalastyle:on

You can also disable only one rule, by specifying its rule id, as specified in:
  http://www.scalastyle.org/rules-0.7.0.html

  // scalastyle:off no.finalize
  override def finalize(): Unit = ...
  // scalastyle:on no.finalize

This file is divided into 3 sections:
 (1) rules that we enforce.
 (2) rules that we would like to enforce, but haven't cleaned up the codebase to turn on yet
     (or we need to make the scalastyle rule more configurable).
 (3) rules that we don't want to enforce.
-->
<scalastyle commentFilter="enabled">
  <name>Scalastyle MBR configuration</name>

  <!-- ================================================================================ -->
  <!--                               rules we enforce                                   -->
  <!-- ================================================================================ -->
  <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.file.HeaderMatchesChecker" enabled="true">
    <parameters>
      <parameter name="header"><![CDATA[/\*
 \* MIT License
 \*
 \* Copyright \(c\) 20\d{2} mbr targeting GmbH
 \*
 \* Permission is hereby granted, free of charge, to any person obtaining a copy
 \* of this software and associated documentation files \(the "Software"\), to deal
 \* in the Software without restriction, including without limitation the rights
 \* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 \* copies of the Software, and to permit persons to whom the Software is
 \* furnished to do so, subject to the following conditions:
 \*
 \* The above copyright notice and this permission notice shall be included in all
 \* copies or substantial portions of the Software.
 \*
 \* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 \* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 \* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 \* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 \* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 \* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 \* SOFTWARE.
 \*/]]></parameter>
      <parameter name="regex">true</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ImportOrderChecker" enabled="true">
    <parameters>
      <parameter name="groups">java,scala,3rdParty,m6r</parameter>
      <parameter name="group.java">javax?\..*</parameter>
      <parameter name="group.scala">scalaj?\..*</parameter>
      <parameter name="group.3rdParty">(?!eu\.m6r\.).*</parameter>
      <parameter name="group.m6r">eu\.m6r\..*</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
    <parameters>
      <parameter name="maxLineLength"><![CDATA[100]]></parameter>
      <parameter name="tabSize"><![CDATA[4]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker"
         enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker"
         enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker"
         enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[println]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
    <parameters>
      <parameter name="maxTypes"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker"
         enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
    <parameters>
      <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
      <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
    <parameters>
      <parameter name="maxLength"><![CDATA[80]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker"
         enabled="true">
    <parameters>
      <parameter name="maxMethods"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker"
         enabled="true"/>
  <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.WhileChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"/>

  <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker"
         enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker"
         enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="true"/>
  <check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker">
    <parameters>
      <parameter name="allowed"><![CDATA[2]]></parameter>
      <parameter name="ignoreRegex"><![CDATA[^"*$]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker">
    <parameters>
      <parameter name="maxParameters"><![CDATA[8]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker">
    <parameters>
      <parameter name="ignore"><![CDATA[-1,0,1,2,3,24]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker"/>
  <check level="warning" class="org.scalastyle.scalariform.VarLocalChecker"/>

  <!-- ================================================================================ -->
  <!--                               rules we don't want                                -->
  <!-- ================================================================================ -->

  <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="false">
    <parameters>
      <parameter name="regex"><![CDATA[println]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker"
         enabled="false">
    <parameters>
      <parameter name="maximum"><![CDATA[8]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker"
         enabled="false"/>
  <check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"/>
</scalastyle>
